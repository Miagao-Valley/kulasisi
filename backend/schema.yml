openapi: 3.0.3
info:
  title: Kulasisi API
  version: 1.0.0
  description: This is the Kulasisi API.
paths:
  /dictionary/:
    get:
      operationId: dictionary_list
      parameters:
      - in: query
        name: contributor__username
        schema:
          type: string
      - in: query
        name: definitions__pos__abbr
        schema:
          type: string
      - in: query
        name: lang__code
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWordList'
          description: ''
    post:
      operationId: dictionary_create
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Word'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Word'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Word'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
  /dictionary/{lang}/{word}/:
    get:
      operationId: dictionary_retrieve
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
    put:
      operationId: dictionary_update
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Word'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Word'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Word'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
    patch:
      operationId: dictionary_partial_update
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWord'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Word'
          description: ''
    delete:
      operationId: dictionary_destroy
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /dictionary/{lang}/{word}/history/:
    get:
      operationId: dictionary_history_list
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWordHistoryList'
          description: ''
  /dictionary/{lang}/{word}/votes/:
    get:
      operationId: dictionary_votes_list
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
    post:
      operationId: dictionary_votes_create
      parameters:
      - in: path
        name: lang
        schema:
          type: string
        required: true
      - in: path
        name: word
        schema:
          type: string
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
  /dictionary/definitions/:
    get:
      operationId: dictionary_definitions_list
      parameters:
      - in: query
        name: contributor__username
        schema:
          type: string
      - in: query
        name: lang__code
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pos__abbr
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: word__lang__code
        schema:
          type: string
      - in: query
        name: word__word
        schema:
          type: string
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDefinitionList'
          description: ''
    post:
      operationId: dictionary_definitions_create
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Definition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Definition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Definition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Definition'
          description: ''
  /dictionary/definitions/{definition_pk}/:
    get:
      operationId: dictionary_definitions_retrieve
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Definition'
          description: ''
    put:
      operationId: dictionary_definitions_update
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Definition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Definition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Definition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Definition'
          description: ''
    patch:
      operationId: dictionary_definitions_partial_update
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDefinition'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Definition'
          description: ''
    delete:
      operationId: dictionary_definitions_destroy
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /dictionary/definitions/{definition_pk}/history/:
    get:
      operationId: dictionary_definitions_history_list
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDefinitionHistoryList'
          description: ''
  /dictionary/definitions/{definition_pk}/votes/:
    get:
      operationId: dictionary_definitions_votes_list
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
    post:
      operationId: dictionary_definitions_votes_create
      parameters:
      - in: path
        name: definition_pk
        schema:
          type: integer
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
  /dictionary/parts-of-speech/:
    get:
      operationId: dictionary_parts_of_speech_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartOfSpeech'
          description: ''
    post:
      operationId: dictionary_parts_of_speech_create
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartOfSpeech'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartOfSpeech'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartOfSpeech'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartOfSpeech'
          description: ''
  /dictionary/parts-of-speech/{abbr}/:
    get:
      operationId: dictionary_parts_of_speech_retrieve
      parameters:
      - in: path
        name: abbr
        schema:
          type: string
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartOfSpeech'
          description: ''
    put:
      operationId: dictionary_parts_of_speech_update
      parameters:
      - in: path
        name: abbr
        schema:
          type: string
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartOfSpeech'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartOfSpeech'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartOfSpeech'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartOfSpeech'
          description: ''
    patch:
      operationId: dictionary_parts_of_speech_partial_update
      parameters:
      - in: path
        name: abbr
        schema:
          type: string
        required: true
      tags:
      - dictionary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartOfSpeech'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartOfSpeech'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartOfSpeech'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartOfSpeech'
          description: ''
    delete:
      operationId: dictionary_parts_of_speech_destroy
      parameters:
      - in: path
        name: abbr
        schema:
          type: string
        required: true
      tags:
      - dictionary
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /languages/:
    get:
      operationId: languages_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - languages
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageList'
          description: ''
  /languages/{code}/:
    get:
      operationId: languages_retrieve
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - languages
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
  /phrases/:
    get:
      operationId: phrases_list
      parameters:
      - in: query
        name: categories__name
        schema:
          type: string
      - in: query
        name: contributor__username
        schema:
          type: string
      - in: query
        name: lang__code
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhraseList'
          description: ''
    post:
      operationId: phrases_create
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phrase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
  /phrases/{phrase_pk}/:
    get:
      operationId: phrases_retrieve
      parameters:
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
    put:
      operationId: phrases_update
      parameters:
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Phrase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
    patch:
      operationId: phrases_partial_update
      parameters:
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhrase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPhrase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPhrase'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
          description: ''
    delete:
      operationId: phrases_destroy
      parameters:
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /phrases/{phrase_pk}/history/:
    get:
      operationId: phrases_history_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPhraseHistoryList'
          description: ''
  /phrases/{phrase_pk}/votes/:
    get:
      operationId: phrases_votes_list
      parameters:
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
    post:
      operationId: phrases_votes_create
      parameters:
      - in: path
        name: phrase_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
  /phrases/categories/:
    get:
      operationId: phrases_categories_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: phrases_categories_create
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /phrases/categories/{name}/:
    get:
      operationId: phrases_categories_retrieve
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: phrases_categories_update
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: phrases_categories_partial_update
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: phrases_categories_destroy
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /phrases/google-translate/:
    post:
      operationId: phrases_google_translate_create
      description: View for translating text asynchronously between two languages
        using Google Translate.
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleTranslate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleTranslate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleTranslate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleTranslate'
          description: ''
  /phrases/translations/:
    get:
      operationId: phrases_translations_list
      parameters:
      - in: query
        name: contributor__username
        schema:
          type: string
      - in: query
        name: lang__code
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: phrase
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTranslationList'
          description: ''
    post:
      operationId: phrases_translations_create
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Translation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
  /phrases/translations/{translation_pk}/:
    get:
      operationId: phrases_translations_retrieve
      parameters:
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
    put:
      operationId: phrases_translations_update
      parameters:
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Translation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Translation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
    patch:
      operationId: phrases_translations_partial_update
      parameters:
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTranslation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTranslation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTranslation'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
          description: ''
    delete:
      operationId: phrases_translations_destroy
      parameters:
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /phrases/translations/{translation_pk}/history/:
    get:
      operationId: phrases_translations_history_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTranslationHistoryList'
          description: ''
  /phrases/translations/{translation_pk}/votes/:
    get:
      operationId: phrases_translations_votes_list
      parameters:
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
          description: ''
    post:
      operationId: phrases_translations_votes_create
      parameters:
      - in: path
        name: translation_pk
        schema:
          type: integer
        required: true
      tags:
      - phrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /users/:
    get:
      operationId: users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /users/{username}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{username}/change-email/:
    post:
      operationId: users_change_email_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeEmail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmail'
          description: ''
  /users/{username}/change-password/:
    post:
      operationId: users_change_password_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /users/{username}/change-phone-number/:
    post:
      operationId: users_change_phone_number_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePhoneNumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePhoneNumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePhoneNumber'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePhoneNumber'
          description: ''
  /users/{username}/delete/:
    delete:
      operationId: users_delete_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/{username}/update/:
    put:
      operationId: users_update_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_update_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      properties:
        name:
          type: string
          description: The name of the category.
          maxLength: 64
        description:
          type: string
          nullable: true
          description: A brief description of the category.
          maxLength: 255
      required:
      - name
    ChangeEmail:
      type: object
      properties:
        new_email:
          type: string
          format: email
          description: The new email address to update to.
        password:
          type: string
          writeOnly: true
          description: The password to authenticate the email change.
      required:
      - new_email
      - password
    ChangePassword:
      type: object
      properties:
        current_password:
          type: string
          writeOnly: true
          description: The current password for authentication.
        new_password:
          type: string
          writeOnly: true
          description: The new password to set.
      required:
      - current_password
      - new_password
    ChangePhoneNumber:
      type: object
      properties:
        new_phone_number:
          type: string
          description: The new phone number to update to.
          maxLength: 15
        password:
          type: string
          writeOnly: true
          description: The password to authenticate the phone number change.
      required:
      - new_phone_number
      - password
    CustomTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Definition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        word:
          allOf:
          - $ref: '#/components/schemas/Word'
          description: The word being defined.
        lang:
          type: string
          description: The language of the definition.
        description:
          type: string
          description: The definition of the word.
          maxLength: 512
        contributor:
          type: string
          description: The username of the contributor.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        pos:
          type: string
          description: The part of speech for the definition.
        synonyms:
          type: array
          items:
            type: string
          readOnly: true
          description: Synonyms of the word.
        antonyms:
          type: array
          items:
            type: string
          readOnly: true
          description: Antonyms of the word.
        usage_note:
          type: string
          nullable: true
          description: Additional notes on the usage of the word.
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the definition.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
      required:
      - antonyms
      - contributor_reputation
      - created_at
      - description
      - id
      - synonyms
      - updated_at
      - vote_count
    DefinitionHistory:
      type: object
      properties:
        history_id:
          type: integer
          readOnly: true
        description:
          type: string
          description: The definition of the word.
          maxLength: 512
        history_user:
          type: string
          description: The username of the user who made the change.
        history_date:
          type: string
          format: date-time
      required:
      - description
      - history_date
      - history_id
    GenderEnum:
      enum:
      - M
      - F
      - O
      - N
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
        * `O` - Other
        * `N` - Prefer not to say
    GoogleTranslate:
      type: object
      description: Serializer for Google Translate integration.
      properties:
        text:
          type: string
          description: Text to be translated.
        source:
          allOf:
          - $ref: '#/components/schemas/SourceEnum'
          writeOnly: true
          default: auto
          description: |-
            The language of the input text.

            * `auto` - auto
            * `eng` - eng
            * `tgl` - tgl
            * `ceb` - ceb
            * `ilo` - ilo
            * `bik` - bik
            * `hil` - hil
            * `pam` - pam
            * `pag` - pag
            * `war` - war
        target:
          allOf:
          - $ref: '#/components/schemas/TargetEnum'
          writeOnly: true
          default: eng
          description: |-
            The language to translate the text into.

            * `auto` - auto
            * `eng` - eng
            * `tgl` - tgl
            * `ceb` - ceb
            * `ilo` - ilo
            * `bik` - bik
            * `hil` - hil
            * `pam` - pam
            * `pag` - pag
            * `war` - war
        original:
          type: string
          readOnly: true
          description: The original text input.
        translated:
          type: string
          readOnly: true
          description: The translated text output.
        google_translate_url:
          type: string
          format: uri
          readOnly: true
          description: URL of the Google Translate service for this translation.
      required:
      - google_translate_url
      - original
      - text
      - translated
    Language:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: The unique code for the language (e.g., 'eng' for English).
          maxLength: 3
        name:
          type: string
          description: The full name of the language (e.g., 'English').
          maxLength: 32
        user_count:
          type: integer
          readOnly: true
          description: Number of users proficient in this language.
        phrase_count:
          type: integer
          readOnly: true
          description: Number of phrases available in this language.
        translation_count:
          type: integer
          readOnly: true
          description: Number of translations in this language.
        word_count:
          type: integer
          readOnly: true
          description: Number of words in this language.
        definition_count:
          type: integer
          readOnly: true
          description: Number of definitions in this language.
        users_by_proficiency:
          type: object
          additionalProperties:
            type: integer
          readOnly: true
          description: Number of users at each proficiency level.
      required:
      - code
      - definition_count
      - id
      - name
      - phrase_count
      - translation_count
      - user_count
      - users_by_proficiency
      - word_count
    LanguageProficiency:
      type: object
      properties:
        lang:
          type: string
          description: The language for which the proficiency is recorded.
        level:
          allOf:
          - $ref: '#/components/schemas/LevelEnum'
          description: |-
            The proficiency level of the user in this language.

            * `1` - Elementary Proficiency
            * `2` - Limited Working Proficiency
            * `3` - Professional Working Proficiency
            * `4` - Full Professional Proficiency
            * `5` - Native / Bilingual Proficiency
          minimum: 0
          maximum: 9223372036854775807
      required:
      - level
    LevelEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - Elementary Proficiency
        * `2` - Limited Working Proficiency
        * `3` - Professional Working Proficiency
        * `4` - Full Professional Proficiency
        * `5` - Native / Bilingual Proficiency
    NullEnum:
      enum:
      - null
    PaginatedDefinitionHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DefinitionHistory'
    PaginatedDefinitionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Definition'
    PaginatedLanguageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Language'
    PaginatedPhraseHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PhraseHistory'
    PaginatedPhraseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Phrase'
    PaginatedTranslationHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TranslationHistory'
    PaginatedTranslationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWordHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WordHistory'
    PaginatedWordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Word'
    PartOfSpeech:
      type: object
      properties:
        abbr:
          type: string
          description: Abbreviation for the part of speech (e.g., 'adj' for Adjective).
          maxLength: 8
        name:
          type: string
          description: Full name of the part of speech (e.g., 'Adjective').
          maxLength: 64
        description:
          type: string
          nullable: true
          description: A brief description of the part of speech.
          maxLength: 255
      required:
      - abbr
      - name
    PatchedCategory:
      type: object
      properties:
        name:
          type: string
          description: The name of the category.
          maxLength: 64
        description:
          type: string
          nullable: true
          description: A brief description of the category.
          maxLength: 255
    PatchedDefinition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        word:
          allOf:
          - $ref: '#/components/schemas/Word'
          description: The word being defined.
        lang:
          type: string
          description: The language of the definition.
        description:
          type: string
          description: The definition of the word.
          maxLength: 512
        contributor:
          type: string
          description: The username of the contributor.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        pos:
          type: string
          description: The part of speech for the definition.
        synonyms:
          type: array
          items:
            type: string
          readOnly: true
          description: Synonyms of the word.
        antonyms:
          type: array
          items:
            type: string
          readOnly: true
          description: Antonyms of the word.
        usage_note:
          type: string
          nullable: true
          description: Additional notes on the usage of the word.
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the definition.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
    PatchedPartOfSpeech:
      type: object
      properties:
        abbr:
          type: string
          description: Abbreviation for the part of speech (e.g., 'adj' for Adjective).
          maxLength: 8
        name:
          type: string
          description: Full name of the part of speech (e.g., 'Adjective').
          maxLength: 64
        description:
          type: string
          nullable: true
          description: A brief description of the part of speech.
          maxLength: 255
    PatchedPhrase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          description: The phrase content.
          maxLength: 10000
        lang:
          type: string
          description: The language code for the phrase.
        contributor:
          type: string
          description: The contributor's username.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        categories:
          type: array
          items:
            type: string
          description: Categories the phrase belongs to.
        usage_note:
          type: string
          nullable: true
          description: Additional notes on the usage of the phrase.
          maxLength: 1000
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the phrase.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
        best_translations:
          type: object
          additionalProperties:
            type: string
          readOnly: true
          description: Best translations based on votes in different languages..
        translation_count:
          type: integer
          readOnly: true
          description: Total number of translations.
    PatchedTranslation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phrase:
          type: integer
          description: The phrase being translated.
        content:
          type: string
          description: The translated phrase content.
          maxLength: 10000
        lang:
          type: string
          description: The language of the translation.
        contributor:
          type: string
          description: The contributor's username.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the translation.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          description: The user's email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: The user's phone number.
          maxLength: 15
        first_name:
          type: string
          nullable: true
          description: The user's first name.
          maxLength: 30
        last_name:
          type: string
          nullable: true
          description: The user's last name.
          maxLength: 30
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: The user's date of birth.
        location:
          type: string
          nullable: true
          description: The user's location (e.g., city, country).
          maxLength: 255
        gender:
          nullable: true
          description: |-
            The user's gender.

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `N` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        bio:
          type: string
          nullable: true
          description: A short biography about the user.
          maxLength: 200
        website:
          type: string
          format: uri
          nullable: true
          description: The user's personal or professional website.
          maxLength: 200
        reputation:
          type: integer
          readOnly: true
          description: The user's reputation score.
        phrase_count:
          type: integer
          readOnly: true
          description: Number of phrases created by the user.
        translation_count:
          type: integer
          readOnly: true
          description: Number of translations created by the user.
        word_count:
          type: integer
          readOnly: true
          description: Number of words created by the user.
        definition_count:
          type: integer
          readOnly: true
          description: Number of definitions created by the user.
        vote_count:
          type: integer
          readOnly: true
          description: Number of votes cast by the user.
        language_proficiencies:
          type: array
          items:
            $ref: '#/components/schemas/LanguageProficiency'
          description: Language proficiencies for the user.
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
    PatchedWord:
      type: object
      description: |-
        A serializer that allows dynamic inclusion of fields.
        Only fields listed in the 'fields' argument will be included.
      properties:
        id:
          type: integer
          readOnly: true
        word:
          type: string
          description: The word being defined.
          maxLength: 64
        lang:
          type: string
          description: The language code of the word.
        contributor:
          type: string
          description: The username of the contributor.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        parts_of_speech:
          type: array
          items:
            type: string
          readOnly: true
          description: Parts of speech for the word.
        best_definition:
          type: string
          readOnly: true
          description: The best definition for the word.
        best_definitions:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Best definitions based on votes in different languages.
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the word.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
    Phrase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          description: The phrase content.
          maxLength: 10000
        lang:
          type: string
          description: The language code for the phrase.
        contributor:
          type: string
          description: The contributor's username.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        categories:
          type: array
          items:
            type: string
          description: Categories the phrase belongs to.
        usage_note:
          type: string
          nullable: true
          description: Additional notes on the usage of the phrase.
          maxLength: 1000
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the phrase.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
        best_translations:
          type: object
          additionalProperties:
            type: string
          readOnly: true
          description: Best translations based on votes in different languages..
        translation_count:
          type: integer
          readOnly: true
          description: Total number of translations.
      required:
      - best_translations
      - content
      - contributor_reputation
      - created_at
      - id
      - translation_count
      - updated_at
      - vote_count
    PhraseHistory:
      type: object
      properties:
        history_id:
          type: integer
          readOnly: true
        content:
          type: string
          description: The phrase content.
          maxLength: 10000
        history_user:
          type: string
          description: The username of the user who made the change.
        history_date:
          type: string
          format: date-time
      required:
      - content
      - history_date
      - history_id
    SourceEnum:
      enum:
      - auto
      - eng
      - tgl
      - ceb
      - ilo
      - bik
      - hil
      - pam
      - pag
      - war
      type: string
      description: |-
        * `auto` - auto
        * `eng` - eng
        * `tgl` - tgl
        * `ceb` - ceb
        * `ilo` - ilo
        * `bik` - bik
        * `hil` - hil
        * `pam` - pam
        * `pag` - pag
        * `war` - war
    TargetEnum:
      enum:
      - auto
      - eng
      - tgl
      - ceb
      - ilo
      - bik
      - hil
      - pam
      - pag
      - war
      type: string
      description: |-
        * `auto` - auto
        * `eng` - eng
        * `tgl` - tgl
        * `ceb` - ceb
        * `ilo` - ilo
        * `bik` - bik
        * `hil` - hil
        * `pam` - pam
        * `pag` - pag
        * `war` - war
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Translation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phrase:
          type: integer
          description: The phrase being translated.
        content:
          type: string
          description: The translated phrase content.
          maxLength: 10000
        lang:
          type: string
          description: The language of the translation.
        contributor:
          type: string
          description: The contributor's username.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the translation.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
      required:
      - content
      - contributor_reputation
      - created_at
      - id
      - updated_at
      - vote_count
    TranslationHistory:
      type: object
      properties:
        history_id:
          type: integer
          readOnly: true
        content:
          type: string
          description: The translated phrase content.
          maxLength: 10000
        history_user:
          type: string
          description: The username of the user who made the change.
        history_date:
          type: string
          format: date-time
      required:
      - content
      - history_date
      - history_id
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          description: The user's email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: The user's phone number.
          maxLength: 15
        first_name:
          type: string
          nullable: true
          description: The user's first name.
          maxLength: 30
        last_name:
          type: string
          nullable: true
          description: The user's last name.
          maxLength: 30
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: The user's date of birth.
        location:
          type: string
          nullable: true
          description: The user's location (e.g., city, country).
          maxLength: 255
        gender:
          nullable: true
          description: |-
            The user's gender.

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `N` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        bio:
          type: string
          nullable: true
          description: A short biography about the user.
          maxLength: 200
        website:
          type: string
          format: uri
          nullable: true
          description: The user's personal or professional website.
          maxLength: 200
        reputation:
          type: integer
          readOnly: true
          description: The user's reputation score.
        phrase_count:
          type: integer
          readOnly: true
          description: Number of phrases created by the user.
        translation_count:
          type: integer
          readOnly: true
          description: Number of translations created by the user.
        word_count:
          type: integer
          readOnly: true
          description: Number of words created by the user.
        definition_count:
          type: integer
          readOnly: true
          description: Number of definitions created by the user.
        vote_count:
          type: integer
          readOnly: true
          description: Number of votes cast by the user.
        language_proficiencies:
          type: array
          items:
            $ref: '#/components/schemas/LanguageProficiency'
          description: Language proficiencies for the user.
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - date_of_birth
      - definition_count
      - email
      - first_name
      - id
      - last_login
      - last_name
      - location
      - password
      - phrase_count
      - reputation
      - translation_count
      - username
      - vote_count
      - word_count
    ValueEnum:
      enum:
      - 1
      - -1
      - 0
      type: integer
      description: |-
        * `1` - Upvote
        * `-1` - Downvote
        * `0` - Unvote
    Vote:
      type: object
      description: Serializer for handling vote actions on different content types
        (e.g., Phrase, Word).
      properties:
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        value:
          $ref: '#/components/schemas/ValueEnum'
        voted_at:
          type: string
          format: date-time
          readOnly: true
          description: The timestamp when the vote was last modified.
      required:
      - value
      - voted_at
    Word:
      type: object
      description: |-
        A serializer that allows dynamic inclusion of fields.
        Only fields listed in the 'fields' argument will be included.
      properties:
        id:
          type: integer
          readOnly: true
        word:
          type: string
          description: The word being defined.
          maxLength: 64
        lang:
          type: string
          description: The language code of the word.
        contributor:
          type: string
          description: The username of the contributor.
        contributor_reputation:
          type: integer
          readOnly: true
          description: Reputation score of the contributor.
        parts_of_speech:
          type: array
          items:
            type: string
          readOnly: true
          description: Parts of speech for the word.
        best_definition:
          type: string
          readOnly: true
          description: The best definition for the word.
        best_definitions:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Best definitions based on votes in different languages.
        source_title:
          type: string
          nullable: true
          description: The title of the source.
          maxLength: 255
        source_link:
          type: string
          format: uri
          nullable: true
          description: A link to the source of the word.
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        vote_count:
          type: integer
          readOnly: true
          description: Number of upvotes minus downvotes.
      required:
      - best_definition
      - best_definitions
      - contributor_reputation
      - created_at
      - id
      - parts_of_speech
      - updated_at
      - vote_count
    WordHistory:
      type: object
      properties:
        history_id:
          type: integer
          readOnly: true
        word:
          type: string
          description: The word itself, containing only alphanumeric characters, dashes,
            underscores, and spaces.
          pattern: ^[a-zA-Z0-9\-_ ]+$
          maxLength: 64
        history_user:
          type: string
          description: The username of the user who made the change.
        history_date:
          type: string
          format: date-time
      required:
      - history_date
      - history_id
      - word
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
